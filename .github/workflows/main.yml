name: Build Electron App

on:
  push:
    branches: [ main, master ]  # Trigger on push to main/master
  pull_request:
    branches: [ main, master ]  # Trigger on PRs to main/master
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        
    steps:
      - name: Print CI token
        run: |
          echo ${{ secrets.CI_TOKEN }}
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true

      - name: Setup step
        if: runner.os != 'Windows'
        run: |
          export CI_TOKEN=${{ secrets.CI_TOKEN }}
          cd ./electros-electron
          chmod +x ./setup.sh
          ./setup.sh
        shell: bash

      - name: Populate Daemons step
        if: runner.os != 'Windows'
        run: |
          export CI_TOKEN=${{ secrets.CI_TOKEN }}
          chmod +x ./populate_daemons.sh
          ./populate_daemons.sh
        shell: bash

      - name: Build step
        if: runner.os != 'Windows'
        run: |
          cd ./electros-electron
          chmod +x ./autobuild.sh
          ./autobuild.sh
        shell: bash

      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.release.tag_name }}
          release_name: ${{ github.event.release.name }}
          draft: true
          prerelease: false

      - name: Upload artifacts Mac x64
        uses: actions/upload-release-asset@latest
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/mac/x64/Electros-2.0.0-mac-x64.dmg
          asset_name: Electros-mac-x64.dmg
          asset_content_type: application/octet-stream

      - name: Upload artifacts Mac arm64
        uses: actions/upload-release-asset@latest
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/mac/arm64/Electros-2.0.0-mac-arm64.dmg
          asset_name: Electros-mac-arm64.dmg
          asset_content_type: application/octet-stream

      - name: Upload artifacts Windows x64
        uses: actions/upload-release-asset@latest
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/win/x64/Electros-2.0.0-win-x64.exe
          asset_name: Electros-win-x64.exe
          asset_content_type: application/octet-stream

      - name: Upload artifacts Linux arm64 AppImage
        uses: actions/upload-release-asset@latest
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/linux/arm64/Electros-2.0.0-linux-arm64.AppImage
          asset_name: Electros-linux-arm64.AppImage
          asset_content_type: application/octet-stream

      - name: Upload artifacts Linux arm64 deb
        uses: actions/upload-release-asset@latest
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/linux/arm64/Electros-2.0.0-linux-arm64.deb
          asset_name: Electros-linux-arm64.deb
          asset_content_type: application/octet-stream

      - name: Upload artifacts Linux x64 AppImage
        uses: actions/upload-release-asset@latest
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/linux/x64/Electros-2.0.0-linux-x64.AppImage
          asset_name: Electros-linux-x64.AppImage
          asset_content_type: application/octet-stream

      - name: Upload artifacts Linux x64 deb
        uses: actions/upload-release-asset@latest
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/linux/x64/Electros-2.0.0-linux-x64.deb
          asset_name: Electros-linux-x64.deb
          asset_content_type: application/octet-stream
