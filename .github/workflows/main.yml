name: Build Electron App

on:
  push:
    branches: [ main, master ]  # Trigger on push to main/master
  pull_request:
    branches: [ main, master ]  # Trigger on PRs to main/master
  workflow_dispatch:  # Allow manual trigger

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.CI_TOKEN }}
          submodules: true

      - name: Get tag name
        id: get_tag_name
        run: |
          cd ./electros-electron
          tag_name=$(jq -r '.version' package.json)
          echo "tag_name=${tag_name}" >> $GITHUB_OUTPUT
          echo "tag_name=${tag_name}"

      - name: Setup step
        if: runner.os != 'Windows'
        run: |
          export CI_TOKEN=${{ secrets.CI_TOKEN }}
          cd ./electros-electron
          chmod +x ./setup.sh
          ./setup.sh
        shell: bash

      - name: Populate Daemons step
        if: runner.os != 'Windows'
        run: |
          export CI_TOKEN=${{ secrets.CI_TOKEN }}
          chmod +x ./populate_daemons.sh
          ./populate_daemons.sh
        shell: bash

      - name: Build step
        if: runner.os != 'Windows'
        run: |
          cd ./electros-electron
          chmod +x ./autobuild.sh
          ./autobuild.sh
        shell: bash

      - name: Create release
        id: create_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.get_tag_name.outputs.tag_name }} \
            --draft \
            --title "ElectrosRelease ${{ steps.get_tag_name.outputs.tag_name }}" \
            --generate-notes

      - name: Upload release assets
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd ./electros-electron/build
          gh release upload ${{ steps.get_tag_name.outputs.tag_name }} \
            mac/x64/Electros-2.0.0-mac-x64.dmg \
            mac/arm64/Electros-2.0.0-mac-arm64.dmg \
            win/x64/Electros-2.0.0-win-x64.exe \
            linux/arm64/Electros-2.0.0-linux-arm64.AppImage \
            linux/arm64/Electros-2.0.0-linux-arm64.deb \
            linux/x64/Electros-2.0.0-linux-x64.AppImage \
            linux/x64/Electros-2.0.0-linux-x64.deb
